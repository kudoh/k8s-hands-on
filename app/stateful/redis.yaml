apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-master
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      role: master
  serviceName: redis-headless
  template:
    metadata:
      labels:
        app: redis
        role: master
    spec:
      containers:
      - name: redis
        image: redis:5.0.5
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        command: [redis-server]
        args: ["/etc/redis-master.conf"]
        env:
        - name: REDIS_REPLICATION_MODE
          value: master
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redis-password
              name: redis
        - name: REDIS_PORT
          value: "6379"
        # livenessProbe:
        #   exec:
        #     command:
        #     - sh
        #     - -c
        #     - /health/ping_local.sh 5
        #   failureThreshold: 5
        #   initialDelaySeconds: 5
        #   periodSeconds: 5
        # readinessProbe:
        #   exec:
        #     command:
        #     - sh
        #     - -c
        #     - /health/ping_local.sh 5
        #   failureThreshold: 5
        #   initialDelaySeconds: 5
        #   periodSeconds: 5
        volumeMounts:
        # - mountPath: /health
        #   name: health
        - mountPath: /data
          name: redis-data
        - mountPath: /etc/
          name: config
          subPath: redis-master.conf
        # - mountPath: /opt/bitnami/redis/etc/
        #   name: redis-tmp-conf
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: redis-data
      labels:
        app: redis
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: openebs-sparse-sc
      volumeMode: Filesystem
