apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: github-service
  name: github-service
spec:
  # クラスタ構成の設定
  replicas: 3
  # Deploymentによって作成されるReplicaSetのLabelSelector
  selector:
    matchLabels:
      app: github-service
  # デプロイ戦略：RollingUpdate. 順次アップデートするのでダウンタイムなし。
  strategy: 
    type: RollingUpdate
  # 生成するPodのテンプレート. レプリカ数分生成される
  template:
    metadata:
      labels:
        app: github-service
    spec:
      # Pod内のコンテナに関する設定
      containers:
      - name: github-service
        # コンテナイメージのリポジトリ＋Tag
        image: kudohn/github-service:latest
        #imagePullPolicy: IfNotPresent
        imagePullPolicy: Always
        # コンテナが公開するPort情報(httpという名前のNamed Port)
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        # Readiness Probe. これに失敗するとServiceリソースの公開対象から外れる
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 5
        # Liveness Probe. ReplicaSetのヘルスチェック.これに失敗するとPodは再起動される。
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 5
        # PodのライフサイクルHook
        # Graceful Shutdownする時間のために5秒の猶予を設ける
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "sleep 5"]
        # 環境変数。Github WebAPIのBasic認証情報をSecretリソースを指定する
        env:
          - name: GITHUB_USER
            valueFrom:
              secretKeyRef:
                name: github-secret
                key: user
          - name: GITHUB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: github-secret
                key: password
        # アプリが要求するリソース(CPU，メモリ)。PodのQoSに影響する
        resources: 
          requests:
            memory: 1Gi
            cpu: 200m
          limits:
            memory: 1Gi
            cpu: 200m
